import { estudantes } from "./estudantes.js";
/** Calcular m√©dia de notas */
export function calcularMedia(notas) {
  return notas.reduce((acumulador, nota) => acumulador + nota, 0) / notas.length;
}

/** Mostrar m√©dias individuais */
export function mediasIndividuais() {
  if (estudantes.length === 0) {
    console.log("üì≠ Nenhum estudante cadastrado.");
    return;
  }

  console.log("\nüßÆ M√©dias Individuais:");
  estudantes
    .map(estudante => ({
      nome: estudante.nome,
      media: calcularMedia(estudante.notas)
    }))
    .sort((a, b) => b.media - a.media) 
    .forEach((estudante, indice) => {
      console.log(
        `üèÖ ${indice + 1}¬∫ ${estudante.nome} ‚Üí M√©dia = ${estudante.media.toFixed(1)}`
      );
    });
}

/** M√©dia geral da turma */
export function mediaGeral() {
  if (estudantes.length === 0) return 0;
  const somaTotal = estudantes.reduce((acumulador, estudante) => acumulador + calcularMedia(estudante.notas), 0);
  return somaTotal / estudantes.length;
}

/** Estudante com maior m√©dia */
export function estudanteMaiorMedia() {
  if (estudantes.length === 0) return null;
  return estudantes.reduce((maior, estudante) => {
    return calcularMedia(estudante.notas) > calcularMedia(maior.notas) ? estudante : maior;
  });
}

/** Relat√≥rios de aprova√ß√£o */
export function relatorios() {
  if (estudantes.length === 0) {
    console.log("üì≠ Nenhum estudante cadastrado.");
    return;
  }

  const aprovados = [];
  const recuperacao = [];
  const reprovados = [];

  // Classifica√ß√£o dos estudantes
  estudantes.forEach(estudante => {
    const media = calcularMedia(estudante.notas);

    if (media >= 7) {
      aprovados.push(`${estudante.nome} (M√©dia: ${media.toFixed(1)})`);
    } else if (media >= 5) {
      recuperacao.push(`${estudante.nome} (M√©dia: ${media.toFixed(1)})`);
    } else {
      reprovados.push(`${estudante.nome} (M√©dia: ${media.toFixed(1)})`);
    }
  });

  // Sa√≠da formatada
  console.log("\nüìä Relat√≥rios:");
  console.log("‚úÖ Aprovados:", aprovados.join(", ") || "Nenhum");
  console.log("‚ö†Ô∏è Recupera√ß√£o:", recuperacao.join(", ") || "Nenhum");
  console.log("‚ùå Reprovados:", reprovados.join(", ") || "Nenhum");
}

